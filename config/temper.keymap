/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define QWERTY 0
#define NAV 1
#define SYM 2
#define SYS 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        holdlayer: holdlayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };
    };

    combos {
        compatible = "zmk,combos";

        parentesisOpen {
            bindings = <&kp LPAR>;
            key-positions = <12 13>;
            layers = <0>;
        };

        corcheteOpen {
            bindings = <&kp LBKT>;
            key-positions = <11 12>;
            layers = <0>;
        };

        llaveOpen {
            bindings = <&kp LBRC>;
            key-positions = <10 11>;
            layers = <0>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <22 21>;
            layers = <0>;
        };

        amperson {
            bindings = <&kp AMPS>;
            key-positions = <22 23>;
            layers = <0>;
        };

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <27 28>;
            layers = <0>;
        };

        pointer {
            bindings = <&kp STAR>;
            key-positions = <27 26>;
            layers = <0>;
        };

        parentesisClose {
            bindings = <&kp RPAR>;
            key-positions = <16 17>;
            layers = <0>;
        };

        corcheteClose {
            bindings = <&kp RBKT>;
            key-positions = <17 18>;
            layers = <0>;
        };

        llaveClose {
            bindings = <&kp RBRC>;
            key-positions = <19 18>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp Q  &kp W  &kp E          &kp R                &kp T      &kp Y      &kp U              &kp I         &kp O    &kp P
&kp A  &kp S  &kp D          &kp F                &kp G      &kp H      &kp J              &kp K         &kp L    &kp SQT
&kp Z  &kp X  &kp C          &kp V                &kp B      &kp N      &kp M              &kp COMMA     &kp DOT  &kp FSLH
              &mt LCTRL TAB  &holdlayer 1 DELETE  &kp SPACE  &kp ENTER  &holdlayer 2 BSPC  &mt LALT ESC
            >;
        };

        nav_layer {
            bindings = <
&kp FSLH  &kp PLUS  &kp EQUAL      &kp MINUS  &kp STAR   &none      &kp PG_UP          &kp HOME      &kp END   &kp PG_DN
&kp N0    &kp N1    &kp N2         &kp N3     &kp N4     &none      &kp LEFT           &kp UP        &kp DOWN  &kp RIGHT
&kp N5    &kp N6    &kp N7         &kp N8     &kp N9     &none      &none              &none         &none     &none
                    &mt LCTRL TAB  &trans     &kp SPACE  &kp ENTER  &holdlayer 2 BSPC  &kp LEFT_GUI
            >;
        };

        sym_layer {
            bindings = <
&none          &none       &kp K_APP     &none            &none     &none     &none     &kp EQUAL     &kp PLUS  &kp GRAVE
&none          &none  &none  &none      &none      &none      &kp EXCL  &kp AT        &kp DLLR  &kp HASH
&none          &none           &none         &none                &none      &none      &none     &kp BSLH      &kp PIPE  &kp CARET
                                &kp LEFT_GUI  &holdlayer 1 DELETE  &kp SPACE  &kp ENTER  &trans    &mt LALT ESC
            >;
        };

        sys_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &kp F1   &kp F2   &kp F3  &kp F4     &kp F5
&kp K_PREV    &kp K_NEXT    &kp K_PLAY_PAUSE  &none         &none         &kp F6   &kp F7   &kp F8  &kp F9     &kp F10
&kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP      &none         &bt BT_CLR    &kp F11  &kp F12  &none   &kp PSCRN  &kp CAPS
                            &none            &trans        &none        &none   &trans   &none
            >;
        };
    };
};
